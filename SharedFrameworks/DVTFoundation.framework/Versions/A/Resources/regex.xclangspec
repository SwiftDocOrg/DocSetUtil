// Regular expression language specs – just enough of the ICU syntax to match up braces
(
    {
        Identifier = "xcode.lang.regex";
        Description = "Regular Expression Coloring";
        BasedOn = "xcode.lang.simpleColoring";
        IncludeInMenu = NO;
        Name = "Regular Expression";
        Syntax = {
            IncludeRules = (
                "xcode.lang.regex.escape",
                "xcode.lang.regex.charset",
                "xcode.lang.regex.comment",
                "xcode.lang.regex.quote",
            );
            Type = "xcode.syntax.plain";
        };
    },
    
    // MARK: Escapes
    {
        Identifier = "xcode.lang.regex.escape";
        Syntax = {
            StartChars = "\\";
            Match = (
                "^\\\\([\\Q()[]{}\\\\E])",
            );
            CaptureTypes = (
                "xcode.syntax.entity",
            );
            Type = "xcode.syntax.entity.start";
        };
    },
    
    // MARK: Character sets and embedded quoted sequences
    {
        Identifier = "xcode.lang.regex.charset";
        Syntax = {
            StartChars = "[";
            Match = (
                "^\\[(\\^?\\]?.*?(?:(?:\\\\\\\\)*\\\\(?:\\]|Q.*?\\\\E).*?)*(?:\\\\\\\\)*)\\]",
            );
            // The outer [ and ] must be distinct from the set’s contents.
            CaptureTypes = (
                "xcode.syntax.character",
            );
            Type = "xcode.syntax.plain";
        };
    },
    
    // MARK: Inline comments and embedded quote sequences
    {
        Identifier = "xcode.lang.regex.comment";
        Syntax = {
            StartChars = "(";
            Match = (
                "^\\(\\?#(.*?((?:\\\\Q.*?\\\\E).*?)*)\\)",
            );
            // The outer (?# and ) must be distinct from the comment’s contents.
            CaptureTypes = (
                "xcode.syntax.comment",
            );
            Type = "xcode.syntax.plain";
        };
    },
    
    // MARK: Quoted sequences
    {
        Identifier = "xcode.lang.regex.quote";
        Syntax = {
            StartChars = "\\";
            Match = (
                "^\\\\Q(.*?)\\\\E",
            );
            // The outer \Q and \E must be distinct from the quoted sequence.
            CaptureTypes = (
                "xcode.syntax.string",
            );
            Type = "xcode.syntax.plain";
        };
    },
)
