(
	{
		Identifier = "xcode.lang.python.identifier";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
			Words = (
				and,
				as,
				assert,
				break,
				class,
				continue,
				def,
				del,
				elif,
				else,
				except,
				exec,
				finally,
				for,
				from,
				global,
				if,
				import,
				in,
				is,
				lambda,
				not,
				or,
				pass,
				print,
				raise,
				return,
				try,
				while,
				with,
				yield,
				None,
			);
			Type = "xcode.syntax.keyword";
			AltType = "xcode.syntax.identifier";
		};
	},
	{
		Identifier = "xcode.lang.python";
		Description = "Python Coloring";
		BasedOn = "xcode.lang.simpleColoring";
		IncludeInMenu = YES;
		Name = Python;
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			IncludeRules = (
				"xcode.lang.python.class",
				"xcode.lang.python.function",
				"xcode.lang.python.block",
				"xcode.lang.python.bracketexpr",
				"xcode.lang.python.parenexpr",
			);
			Type = "xcode.syntax.plain";
			"DirtyPreviousRightEdge" = YES;
		};
	},
	{
		Identifier = "xcode.lang.python.lexer";
		Syntax = {
			"SourceScannerClassName" = DVTPythonScanner;
			IncludeRules = (
				"xcode.lang.comment.singleline.pound",
				"xcode.lang.python.string.tripledoublequote",
				"xcode.lang.python.string.triplesinglequote",
				"xcode.lang.python.string.unicode.tripledoublequote",
				"xcode.lang.python.string.unicode.triplesinglequote",
				"xcode.lang.python.string.unicode",
				"xcode.lang.python.string.raw.tripledoublequote",
				"xcode.lang.python.string.raw.triplesinglequote",
				"xcode.lang.python.string.raw",
				"xcode.lang.python.string.rawbytes.tripledoublequote",
				"xcode.lang.python.string.rawbytes.triplesinglequote",
				"xcode.lang.python.string.rawbytes",
				"xcode.lang.python.string.bytesraw.tripledoublequote",
				"xcode.lang.python.string.bytesraw.triplesinglequote",
				"xcode.lang.python.string.bytesraw",
				"xcode.lang.python.string.bytes.tripledoublequote",
				"xcode.lang.python.string.bytes.triplesinglequote",
				"xcode.lang.python.string.bytes",
				"xcode.lang.string",
				"xcode.lang.character",
				"xcode.lang.number",
				"xcode.lang.python.identifier",
			);
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.indent";
		Syntax = {
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.dedent";
		Syntax = {
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.lexer.simple";
		Syntax = {
			IncludeRules = (
				"xcode.lang.comment.singleline.pound",
				"xcode.lang.python.string.tripledoublequote",
				"xcode.lang.python.string.triplesinglequote",
				"xcode.lang.python.string.unicode.tripledoublequote",
				"xcode.lang.python.string.unicode.triplesinglequote",
				"xcode.lang.python.string.unicode",
				"xcode.lang.python.string.raw.tripledoublequote",
				"xcode.lang.python.string.raw.triplesinglequote",
				"xcode.lang.python.string.raw",
				"xcode.lang.python.string.rawbytes.tripledoublequote",
				"xcode.lang.python.string.rawbytes.triplesinglequote",
				"xcode.lang.python.string.rawbytes",
				"xcode.lang.python.string.bytesraw.tripledoublequote",
				"xcode.lang.python.string.bytesraw.triplesinglequote",
				"xcode.lang.python.string.bytesraw",
				"xcode.lang.python.string.bytes.tripledoublequote",
				"xcode.lang.python.string.bytes.triplesinglequote",
				"xcode.lang.python.string.bytes",
				"xcode.lang.string",
				"xcode.lang.character",
				"xcode.lang.number",
				"xcode.lang.python.identifier",
			);
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.class";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Rules = (
				"xcode.lang.python.class.declarator",
				"xcode.lang.python.block",
			);
			Type = "xcode.syntax.definition.class";
		};
	},
	{
		Identifier = "xcode.lang.python.class.declarator";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Rules = (
				class,
				"xcode.lang.python.name",
				"xcode.lang.python.parenexpr?",
				":",
			);
		};
	},
	{
		Identifier = "xcode.lang.python.function";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Rules = (
				"xcode.lang.python.function.declarator",
				"xcode.lang.python.block",
			);
			Type = "xcode.syntax.definition.function";
		};
	},
	{
		Identifier = "xcode.lang.python.function.declarator";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Rules = (
				def,
				"xcode.lang.python.name",
				"xcode.lang.python.parenexpr",
				":",
			);
		};
	},
	{
		Identifier = "xcode.lang.python.block";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Start = "xcode.lang.python.indent";
			End = "xcode.lang.python.dedent";
			Foldable = YES;
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.python.class",
				"xcode.lang.python.function",
				"xcode.lang.python.bracketexpr",
				"xcode.lang.python.parenexpr",
			);
		};
	},
	{
		Identifier = "xcode.lang.python.name";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer";
			Rules = (
				"xcode.lang.python.identifier",
			);
			Type = "xcode.syntax.name.partial";
		};
	},
    {
		Identifier = "xcode.lang.python.string.tripledoublequote";
		Syntax = {
			Start = "\"\"\"";
			EscapeChar = "\\";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.triplesinglequote";
		Syntax = {
			Start = "'''";
			EscapeChar = "\\";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
    {
        Identifier = "xcode.lang.python.string.unicode";
        Syntax = {
            CaseSensitive = NO;
            Start = "u\"";
            EscapeChar = "\\";
            End = "\"";
            AltEnd = "\n";
            Type = "xcode.syntax.string";
        };
    },
    {
		Identifier = "xcode.lang.python.string.unicode.tripledoublequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "u\"\"\"";
			EscapeChar = "\\";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.unicode.triplesinglequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "u'''";
			EscapeChar = "\\";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
    {
        Identifier = "xcode.lang.python.string.raw";
        Syntax = {
            CaseSensitive = NO;
            Start = "r\"";
            End = "\"";
            AltEnd = "\n";
            Type = "xcode.syntax.string";
        };
    },
    {
		Identifier = "xcode.lang.python.string.raw.tripledoublequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "r\"\"\"";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.raw.triplesinglequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "r'''";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
        Identifier = "xcode.lang.python.string.bytes";
        Syntax = {
            CaseSensitive = NO;
            Start = "b\"";
            EscapeChar = "\\";
            End = "\"";
            AltEnd = "\n";
            Type = "xcode.syntax.string";
        };
    },
    {
		Identifier = "xcode.lang.python.string.bytes.tripledoublequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "b\"\"\"";
			EscapeChar = "\\";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.bytes.triplesinglequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "b'''";
			EscapeChar = "\\";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
    {
        Identifier = "xcode.lang.python.string.rawbytes";
        Syntax = {
            CaseSensitive = NO;
            Start = "rb\"";
            End = "\"";
            AltEnd = "\n";
            Type = "xcode.syntax.string";
        };
    },
    {
		Identifier = "xcode.lang.python.string.rawbytes.tripledoublequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "rb\"\"\"";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.rawbytes.triplesinglequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "rb'''";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
    {
        Identifier = "xcode.lang.python.string.bytesraw";
        Syntax = {
            CaseSensitive = NO;
            Start = "br\"";
            End = "\"";
            AltEnd = "\n";
            Type = "xcode.syntax.string";
        };
    },
    {
		Identifier = "xcode.lang.python.string.bytesraw.tripledoublequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "br\"\"\"";
			End = "\"\"\"";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
	{
		Identifier = "xcode.lang.python.string.bytesraw.triplesinglequote";
		Syntax = {
            CaseSensitive = NO;
			Start = "br'''";
			End = "'''";
			Foldable = YES;
			Type = "xcode.syntax.string";
		};
	},
    {
		Identifier = "xcode.lang.python.parenexpr";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer.simple";
			Start = "(";
			End = ")";
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.python.bracketexpr",
			);
		};
	},
	{
		Identifier = "xcode.lang.python.bracketexpr";
		Syntax = {
			Tokenizer = "xcode.lang.python.lexer.simple";
			Start = "[";
			End = "]";
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.python.parenexpr",
			);
		};
	},
)