// Bourne Shell lang specs
(

/****************************************************************************/
// MARK: Strings and Characters
/****************************************************************************/

    {
        Identifier = "xcode.lang.string.backquote";
        Syntax = {
            Start = "`";
            EscapeChar = "\\";
            End = "`";
            Type = "xcode.syntax.string";
        };
    },

/****************************************************************************/
// MARK: Keywords
/****************************************************************************/

    {
        Identifier = "xcode.lang.sh.keyword";
        Syntax = {
            StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_";
            Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
            Words = (
                "break",
                "case",
                "continue",
                "do",
                "done",
                "elif",
                "else",
                "esac",
                "exit",
                "export",
                "fi",
                "for",
                "if",
                "in", 
                "read",
                "shift",
                "then",
                "while"
            );
            Type = "xcode.syntax.keyword";
        };
    },

    // don't color this as a comment.
    {
        Identifier = "xcode.lang.sh.argcount";
        Syntax = {
            Words = (
                "$#",
            );
            Type = "xcode.syntax.plain";
        };
    },



/****************************************************************************/
// MARK: Simple Syntax Coloring
/****************************************************************************/

    {
        Identifier = "xcode.lang.sh";
        Description = "Bourne Shell Coloring";
        IncludeInMenu = YES;
        BasedOn = "xcode.lang.simpleColoring";
        Name = "Bourne Shell";
        Syntax = {
            IncludeRules = (        // processed in order
                "xcode.lang.sh.argcount",
                "xcode.lang.comment.singleline.pound",
                "xcode.lang.string",
                "xcode.lang.string.singlequote",
                "xcode.lang.string.backquote",
                "xcode.lang.number",
                "xcode.lang.sh.keyword",
                "xcode.lang.sh.block"
            );
            Type = "xcode.syntax.plain";
        };
    },
    {
        Identifier = "xcode.lang.sh.block";
        Syntax = {
            // Handle nested blocks
            Start = "{";
            End = "}";
            Recursive = YES;
            IncludeRules = (        // processed in order
                "xcode.lang.sh.argcount",
                "xcode.lang.comment.singleline.pound",
                "xcode.lang.string",
                "xcode.lang.string.singlequote",
                "xcode.lang.string.backquote",
                "xcode.lang.number",
                "xcode.lang.sh.keyword",
            );
        };
    },
)